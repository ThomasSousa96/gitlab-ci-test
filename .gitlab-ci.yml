image:
  name: infinityrefactoring/maven:3.5
  entrypoint: [""]

variables:
  SSH_USER: git
  ORIGIN: $SSH_USER@$SSH_HOST:$GIT_ORIGIN_REPOSITORY

before_script:
  - /usr/local/bin/docker-entrypoint

stages:
  - setup
  - verify
  - test
  - package
  - deploy

cache:
  paths:
    - /root/.m2/repository

version_update:
  stage: setup
  script:
    - ivg generate --push --push-origin=$ORIGIN --push-branch=HEAD:$CI_COMMIT_REF_NAME --autosquash=false --use-error-exit-code
  except:
    - develop
    - master

version_validation:
  stage: verify
  script:
    - ivg validate
  only:
    - develop
    - master

code_quality:
  stage: verify
  cache:
    paths:
      - /root/.m2/repository
      - /root/.sonar/cache
  variables:
    SONAR_BRANCH_NAME: $CI_COMMIT_REF_NAME
  script:
    - mvn-sonar
  environment:
    name: code-quality
    url: $SONAR_DASHBOARD_URL

test:
  stage: test
  script:
    - mvn clean test

package:
  stage: package
  script:
    - mvn package -DskipTests
  artifacts:
    paths:
      - target/*.jar
      - target/*.war
  only:
    - develop
    - master

deploy:staging_maven_central:
  stage: deploy
  variables:
    GROUP_ID: com/infinityrefactoring
    ARTIFACT_ID: gitlab-ci-test
  environment:
    name: staging-artifact/$GROUP_ID/$ARTIFACT_ID
    url: https://oss.sonatype.org/content/repositories/snapshots/$GROUP_ID/$ARTIFACT_ID
  script:
    - echo "mvn -P oss-release -DskipTests deploy"
  dependencies:
    - package
  only:
    - develop

deploy:maven_central:
  stage: deploy
  when: manual
  variables:
    GROUP_ID: com.infinityrefactoring
    ARTIFACT_ID: gitlab-ci-test
  environment:
    name: artifact/$GROUP_ID/$ARTIFACT_ID
    url: https://search.maven.org/search?q=g:$GROUP_ID%20AND%20a:$ARTIFACT_ID
  script:
    - version=$(ivg get-version --quiet)
    - echo "mvn -P oss-release -DskipTests deploy"
    - git tag -a "v$version" -m "Version $version"
    - git push $ORIGIN $version
  dependencies:
    - package
  only:
    - master